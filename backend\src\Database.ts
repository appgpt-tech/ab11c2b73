// Source code generated by AppGPT (www.appgpt.tech)

 //Class to create tables and seed new database
import { DataSource } from "typeorm";
import { DBConfiguration } from "./Configuration";
import { SettingsEntity } from "./db/Settings.entity";
//autogenerate imports based on resources
import { UsersEntity } from "./db/Users.entity";
import { CardsEntity } from "./db/Cards.entity";
import { SetsEntity } from "./db/Sets.entity";
import { InventoryEntity } from "./db/Inventory.entity";
import { WishlistEntity } from "./db/Wishlist.entity";

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [SettingsEntity, UsersEntity, CardsEntity, SetsEntity, InventoryEntity, WishlistEntity];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables


    await Database.Seed();
  }
  static async Seed() {
    let data: any = {"Users":[{"user_name":"AshKetchum","email":"ash@gmail.com","password":"pikachu123"},{"user_name":"MistyWaterflower","email":"misty@gmail.com","password":"starmie789"},{"user_name":"BrockHarrison","email":"brock@gmail.com","password":"onix456"}],"Cards":[{"card_name":"Pikachu","serial":"XY123","type":"Electric","rarity":"Common","condition":"Mint","imageurl":"pikachu.jpg","set":"Base Set"},{"card_name":"Charizard","serial":"XY456","type":"Fire","rarity":"Rare","condition":"Near Mint","imageurl":"charizard.jpg","set":"Base Set"},{"card_name":"Blastoise","serial":"XY789","type":"Water","rarity":"Uncommon","condition":"Lightly Played","imageurl":"blastoise.jpg","set":"Base Set"}],"Sets":[{"set_name":"Base Set","release_date":"1999-01-09","total_cards":102},{"set_name":"Jungle","release_date":"1999-06-16","total_cards":64},{"set_name":"Fossil","release_date":"1999-10-10","total_cards":62}],"Inventory":[{"user":"AshKetchum","card":"Pikachu","date_added":"2022-01-01"},{"user":"MistyWaterflower","card":"Charizard","date_added":"2022-01-02"},{"user":"BrockHarrison","card":"Blastoise","date_added":"2022-01-03"}],"Wishlist":[{"user":"AshKetchum","card":"Charizard","inserted_date":"2022-01-04"},{"user":"MistyWaterflower","card":"Blastoise","inserted_date":"2022-01-05"},{"user":"BrockHarrison","card":"Pikachu","inserted_date":"2022-01-06"}]};
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true){
      console.log('   Seeding database...');
      await this.SeedResource("UsersEntity", data.Users);
await this.SeedResource("CardsEntity", data.Cards);
await this.SeedResource("SetsEntity", data.Sets);
await this.SeedResource("InventoryEntity", data.Inventory);
await this.SeedResource("WishlistEntity", data.Wishlist); 
      await this.SeedResource("SettingsEntity", {
        settingname: "isSeeded",
        settingvalue: "true",
      });
    }else{
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository("SettingsEntity");
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: "isSeeded",
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table '+resourceName);
    await repo.upsert(resourceData, ["id"]);
  }
}

